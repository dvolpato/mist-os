# Copyright 2024 Mist Tecnologia LTDA. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/zircon/migrated_targets.gni")

group("kernel") {
  deps = [ ":starnix_runner" ]
}

zx_library("starnix_core") {
  sources = [
    "arch/${current_cpu}/loader.cc",
    "arch/${current_cpu}/syscalls.cc",
    "device/kobject.cc",
    "execution/executor.cc",
    "fs/mistos/bootfs.cc",
    "fs/mistos/syslog.cc",
    "fs/mistos/tree_builder.cc",
    "fs/tmpfs.cc",
    "loader.cc",
    "logging/logging.cc",
    "mm/memory.cc",
    "mm/memory_accessor.cc",
    "mm/memory_manager.cc",
    "mm/syscalls.cc",
    "signal/signal_handling.cc",
    "signal/syscalls.cc",
    "starnix-loader.cc",
    "syscalls/misc.cc",
    "task/current_task.cc",
    "task/kernel.cc",
    "task/kernel_threads.cc",
    "task/pid_table.cc",
    "task/process_group.cc",
    "task/session.cc",
    "task/syscalls.cc",
    "task/task.cc",
    "task/thread_group.cc",
    "task/waiter.cc",
    "testing.cc",
    "vfs/anon_node.cc",
    "vfs/buffers/io_buffers.cc",
    "vfs/dir_entry.cc",
    "vfs/directory_file.cc",
    "vfs/dirent_sink.cc",
    "vfs/fd_number.cc",
    "vfs/fd_table.cc",
    "vfs/file_object.cc",
    "vfs/file_ops.cc",
    "vfs/file_system.cc",
    "vfs/fs_args.cc",
    "vfs/fs_context.cc",
    "vfs/fs_node.cc",
    "vfs/fs_node_ops.cc",
    "vfs/memory_file.cc",
    "vfs/module.cc",
    "vfs/mount.cc",
    "vfs/namespace.cc",
    "vfs/namespace_node.cc",
    "vfs/path.cc",
    "vfs/simple_directory.cc",
    "vfs/syscalls.cc",
    "vfs/xattr.cc",
  ]

  public_deps = [
    "//src/lib/elfldltl:headers",
    "//vendor/misttech/third_party/linux_uapi",
    "//vendor/misttech/zircon/kernel/lib/mistos/util:headers",
    "//vendor/misttech/zircon/kernel/lib/starnix/lib/bootfs",
    "//vendor/misttech/zircon/kernel/lib/starnix/lib/elfldltl",
    "//vendor/misttech/zircon/kernel/lib/starnix/lib/starnix-sync",
    "//vendor/misttech/zircon/kernel/lib/starnix/lib/starnix-syscalls",
    "//vendor/misttech/zircon/kernel/lib/starnix/lib/starnix-uapi:headers",
  ]

  deps = [
    "//vendor/misttech/zircon/kernel/lib/handoff",
    "//vendor/misttech/zircon/kernel/lib/mistos/util",
    "//vendor/misttech/zircon/kernel/lib/starnix/lib/starnix-zircon:headers",
    "//zircon/kernel/object:headers",
  ]
}

zx_library("starnix_runner") {
  sources = [
    "debugcommands.cc",
    "runner/container.cc",
  ]

  deps = [
    ":starnix_core",
    "//vendor/misttech/zircon/kernel/lib/handoff",
    "//zircon/kernel/lib/console",
  ]
}

group("tests") {
  deps = [ "tests" ]
}
